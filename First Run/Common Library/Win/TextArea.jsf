function setDefaultValues()
{
	var values = new Array();

	values.push({ name:"Text", type:"text", value:"Text" });
	values.push({ name:"Text Color", type:"color", value:"#000000" });
	values.push({ name:"Font Family", type:"font", value:"Verdana" });
	values.push({ name:"Font Size", type:"number", value:"10" });
	values.push({ name:"Enabled", type:"Boolean", value:"true"});

	values.push({ name:"Hori.State (Left)",  type:"ComboBox", value:"Normal,Normal,Over,Press" });
	values.push({ name:"Hori.State (Thumb)", type:"ComboBox", value:"Normal,Normal,Over,Press" });
	values.push({ name:"Hori.State (Track)", type:"ComboBox", value:"Normal,Normal,Over,Press" });
	values.push({ name:"Hori.State (Right)", type:"ComboBox", value:"Normal,Normal,Over,Press" });
	values.push({ name:"Hori.scrollbar",       type:"Boolean",  value:"true"                     });

	values.push({ name:"Vert.State (Up)",    type:"ComboBox", value:"Normal,Normal,Over,Press" });
	values.push({ name:"Vert.State (Thumb)", type:"ComboBox", value:"Normal,Normal,Over,Press" });
	values.push({ name:"Vert.State (Track)", type:"ComboBox", value:"Normal,Normal,Over,Press" });
	values.push({ name:"Vert.State (Down)",  type:"ComboBox", value:"Normal,Normal,Over,Press" });
	values.push({ name:"Vert.scrollbar",       type:"Boolean",  value:"true"                     });


	Widget.elem.customData["currentValues"] = values;
}

function applyCurrentValues()
{
	var values = Widget.elem.customData["currentValues"];


	Widget.GetObjectByName("Text").textChars = values[0].value;
	Widget.GetObjectByName("Text").font = values[2].value;
	Widget.GetObjectByName("Text").fontsize = values[3].value;
	Widget.GetObjectByName("Text").pathAttributes.fillColor = values[1].value;

	var enabled = (values[4].value.toString() == "true");
	
	//Widget.GetObjectByName("enabled").visible = (values[4].value.toString() == "true");
	if(!enabled)
	  {
		Widget.GetObjectByName("Text").pathAttributes.fillColor = "#cccccc";
		Widget.GetObjectByName("enabled").pathAttributes.brushColor = "#cccccc";
	  }
	var hstates = new Array(4);
    for(i=0;i<4;i++)
    {
       hstates[i] = "h_" + values[i+5].value.split(",")[0].toLowerCase()+(i+1);
    }
    var henabled    = (values[9].value.toString()=="true");
    
   
    for(i=0;i<4;i++)
    {
       Widget.GetObjectByName("h_normal"+(i+1)).visible = false;
	   Widget.GetObjectByName("h_press"+(i+1)).visible = false;
	   Widget.GetObjectByName("h_over"+(i+1)).visible = false;
    }
    if(henabled && enabled)
    {
       Widget.GetObjectByName("h_disabled").visible = false;
       
       for(i=0;i<4;i++)
         Widget.GetObjectByName(hstates[i]).visible = true;
          
     }
    
    else
           Widget.GetObjectByName("h_disabled").visible = true;



	var states = new Array(4);
    for(i=0;i<4;i++)
    {
       states[i] = values[i+10].value.split(",")[0].toLowerCase()+(i+1);
    }
    var venabled    = (values[14].value.toString()=="true");
    for(i=0;i<4;i++)
    {
       Widget.GetObjectByName("normal"+(i+1)).visible = false;
	   Widget.GetObjectByName("press"+(i+1)).visible = false;
	   Widget.GetObjectByName("over"+(i+1)).visible = false;
	}
    if(venabled && enabled)
    {
       Widget.GetObjectByName("disabled").visible = false;
       
       for(i=0;i<4;i++)
          Widget.GetObjectByName(states[i]).visible = true;
    }
    else
           Widget.GetObjectByName("disabled").visible = true;


}

switch (Widget.opCode)
{
	case 1: setDefaultValues();   break;
	case 2: applyCurrentValues(); break;
}